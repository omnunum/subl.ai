// Code generated by wunderctl. DO NOT EDIT.

export interface LinkDefinition {
	targetType: string;
	targetFieldName: string;
	sourceField: string;
	argumentSources: LinkFieldArgumentSourceDefinition[];
}

export interface LinkFieldArgumentSourceDefinition {
	name: string;
	type: "objectField" | "fieldArgument";
	path: string[];
}

class LinkBuilder<T, R extends {} = {}, TT = {}> {
	// @ts-ignore
	constructor(current: R = {}, sourceField: string, targetType: string, targetField: string) {
		this.current = current;
		this.sourceField = sourceField;
		this.targetType = targetType;
		this.targetField = targetField;
	}

	private readonly sourceField: string;
	private readonly targetType: string;
	private readonly targetField: string;

	// @ts-ignore
	private current: R = {};

	argument<P extends Exclude<keyof T, keyof R>, V extends T[P], S extends "fieldArgument" | "objectField">(
		key: P,
		source: S,
		value: S extends "fieldArgument" ? string : TT,
		...extraPath: string[]
	) {
		const extra: {} = { [key]: { source, path: [value, ...extraPath] } };

		const instance = {
			...(this.current as object),
			...extra,
		} as R & Pick<T, P>;

		return new LinkBuilder<T, R & Pick<T, P>, TT>(instance, this.sourceField, this.targetType, this.targetField);
	}

	build = (): LinkDefinition => {
		const args = this.current as { [key: string]: { path: string[]; source: "fieldArgument" | "objectField" } };
		return {
			argumentSources: Object.keys(args).map((key) => ({
				name: key,
				type: args[key].source,
				path: args[key].path,
			})),
			targetType: this.targetType,
			sourceField: this.sourceField,
			targetFieldName: this.targetField,
		};
	};
}

export const sourceStep = <T extends {}, R extends {}>() => ({
	source: <F extends keyof T>(field: F) => {
		return targetStep<T, F, R>(field);
	},
});

const targetStep = <T, F extends keyof T, R>(field: F) => ({
	target: <r extends keyof R>(targetType: r, targetField: string) => {
		return new LinkBuilder<T[F], {}, R[r]>({}, field as string, targetType as string, targetField);
	},
});

interface TargetTypes {
	db_ScriptsCountOutputType: "sections" | "_join";
	db_scripts: "id" | "created_at" | "updated_at" | "name" | "summary" | "audio_url" | "sections" | "_count" | "_join";
	db_SectionsCountOutputType: "fragments" | "_join";
	db_sections:
		| "id"
		| "created_at"
		| "updated_at"
		| "sort_order"
		| "name"
		| "summary"
		| "audio_url"
		| "script_id"
		| "scripts"
		| "fragments"
		| "_count"
		| "_join";
	db_fragments:
		| "id"
		| "created_at"
		| "updated_at"
		| "sort_order"
		| "content"
		| "audio_url"
		| "section_id"
		| "sections"
		| "_join";
	db_FragmentsCountAggregateOutputType:
		| "id"
		| "created_at"
		| "updated_at"
		| "sort_order"
		| "content"
		| "audio_url"
		| "section_id"
		| "_all"
		| "_join";
	db_FragmentsAvgAggregateOutputType: "sort_order" | "_join";
	db_FragmentsSumAggregateOutputType: "sort_order" | "_join";
	db_FragmentsMinAggregateOutputType:
		| "id"
		| "created_at"
		| "updated_at"
		| "sort_order"
		| "content"
		| "audio_url"
		| "section_id"
		| "_join";
	db_FragmentsMaxAggregateOutputType:
		| "id"
		| "created_at"
		| "updated_at"
		| "sort_order"
		| "content"
		| "audio_url"
		| "section_id"
		| "_join";
	db_AggregateFragments: "_count" | "_avg" | "_sum" | "_min" | "_max" | "_join";
	db_FragmentsGroupByOutputType:
		| "id"
		| "created_at"
		| "updated_at"
		| "sort_order"
		| "content"
		| "audio_url"
		| "section_id"
		| "_count"
		| "_avg"
		| "_sum"
		| "_min"
		| "_max"
		| "_join";
	db_ScriptsCountAggregateOutputType:
		| "id"
		| "created_at"
		| "updated_at"
		| "name"
		| "summary"
		| "audio_url"
		| "_all"
		| "_join";
	db_ScriptsMinAggregateOutputType: "id" | "created_at" | "updated_at" | "name" | "summary" | "audio_url" | "_join";
	db_ScriptsMaxAggregateOutputType: "id" | "created_at" | "updated_at" | "name" | "summary" | "audio_url" | "_join";
	db_AggregateScripts: "_count" | "_min" | "_max" | "_join";
	db_ScriptsGroupByOutputType:
		| "id"
		| "created_at"
		| "updated_at"
		| "name"
		| "summary"
		| "audio_url"
		| "_count"
		| "_min"
		| "_max"
		| "_join";
	db_SectionsCountAggregateOutputType:
		| "id"
		| "created_at"
		| "updated_at"
		| "sort_order"
		| "name"
		| "summary"
		| "audio_url"
		| "script_id"
		| "_all"
		| "_join";
	db_SectionsAvgAggregateOutputType: "sort_order" | "_join";
	db_SectionsSumAggregateOutputType: "sort_order" | "_join";
	db_SectionsMinAggregateOutputType:
		| "id"
		| "created_at"
		| "updated_at"
		| "sort_order"
		| "name"
		| "summary"
		| "audio_url"
		| "script_id"
		| "_join";
	db_SectionsMaxAggregateOutputType:
		| "id"
		| "created_at"
		| "updated_at"
		| "sort_order"
		| "name"
		| "summary"
		| "audio_url"
		| "script_id"
		| "_join";
	db_AggregateSections: "_count" | "_avg" | "_sum" | "_min" | "_max" | "_join";
	db_SectionsGroupByOutputType:
		| "id"
		| "created_at"
		| "updated_at"
		| "sort_order"
		| "name"
		| "summary"
		| "audio_url"
		| "script_id"
		| "_count"
		| "_avg"
		| "_sum"
		| "_min"
		| "_max"
		| "_join";
	db_AffectedRowsOutput: "count" | "_join";
	_Row:
		| "ID"
		| "Int"
		| "Float"
		| "String"
		| "Boolean"
		| "DateTime"
		| "JSON"
		| "Object"
		| "Array"
		| "OptionalID"
		| "OptionalInt"
		| "OptionalFloat"
		| "OptionalString"
		| "OptionalBoolean"
		| "OptionalDateTime"
		| "OptionalJSON"
		| "OptionalObject"
		| "OptionalArray"
		| "_join";
}

interface SourceFields {
	db_findFirstfragments: {
		where: null;
		orderBy: null;
		cursor: null;
		take: null;
		skip: null;
		distinct: null;
	};
	db_findManyfragments: {
		where: null;
		orderBy: null;
		cursor: null;
		take: null;
		skip: null;
		distinct: null;
	};
	db_aggregatefragments: {
		where: null;
		orderBy: null;
		cursor: null;
		take: null;
		skip: null;
	};
	db_groupByfragments: {
		where: null;
		orderBy: null;
		by: null;
		having: null;
		take: null;
		skip: null;
	};
	db_findUniquefragments: {
		where: null;
	};
	db_findFirstscripts: {
		where: null;
		orderBy: null;
		cursor: null;
		take: null;
		skip: null;
		distinct: null;
	};
	db_findManyscripts: {
		where: null;
		orderBy: null;
		cursor: null;
		take: null;
		skip: null;
		distinct: null;
	};
	db_aggregatescripts: {
		where: null;
		orderBy: null;
		cursor: null;
		take: null;
		skip: null;
	};
	db_groupByscripts: {
		where: null;
		orderBy: null;
		by: null;
		having: null;
		take: null;
		skip: null;
	};
	db_findUniquescripts: {
		where: null;
	};
	db_findFirstsections: {
		where: null;
		orderBy: null;
		cursor: null;
		take: null;
		skip: null;
		distinct: null;
	};
	db_findManysections: {
		where: null;
		orderBy: null;
		cursor: null;
		take: null;
		skip: null;
		distinct: null;
	};
	db_aggregatesections: {
		where: null;
		orderBy: null;
		cursor: null;
		take: null;
		skip: null;
	};
	db_groupBysections: {
		where: null;
		orderBy: null;
		by: null;
		having: null;
		take: null;
		skip: null;
	};
	db_findUniquesections: {
		where: null;
	};
	db_queryRaw: {
		query: null;
		parameters: null;
	};
	db_queryRawJSON: {
		query: null;
		parameters: null;
	};
	gql_hello: {};
}

const linkBuilder = sourceStep<SourceFields, TargetTypes>();
export default linkBuilder;
