{
  "version": 3,
  "sources": ["../../../../operations/users/get.ts", "../../../wundergraph.factory.ts"],
  "sourcesContent": ["import { createOperation, z } from '../../generated/wundergraph.factory';\n\nexport default createOperation.query({\n\thandler: async ({ internalClient }) => {\n\t\tconst users = await internalClient.queries.Users();\n\t\treturn { ...users.data?.db_findFirstusers };\n\t},\n});\n", "\n// Code generated by wunderctl. DO NOT EDIT.\n\nimport type { InternalClient } from \"./wundergraph.internal.client\";\nimport type { InternalOperationsClient } from \"./wundergraph.internal.operations.client\";\nimport type { Role } from \"./wundergraph.server\";\nimport type { CustomClaims } from \"./claims\";\nimport { createOperationFactory } from \"@wundergraph/sdk/operations\";\n\n\nimport server from '../wundergraph.server';\n\ntype ContextField = Required<Required<Required<typeof server>['context']>['request']>['create'];\nexport type ContextType = ContextField extends (...args: any) => any ? Awaited<ReturnType<ContextField>> : never;\n\n\nexport {z, AuthorizationError} from \"@wundergraph/sdk/operations\";\nexport const createOperation = createOperationFactory<InternalClient, Role, CustomClaims, InternalOperationsClient, ContextType>();"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACOA,wBAAuC;AASvC,IAAAA,qBAAoC;AAC7B,IAAM,sBAAkB,0CAAkG;;;ADfjI,IAAO,cAAQ,gBAAgB,MAAM;AAAA,EACpC,SAAS,OAAO,EAAE,eAAe,MAAM;AACtC,UAAM,QAAQ,MAAM,eAAe,QAAQ,MAAM;AACjD,WAAO,EAAE,GAAG,MAAM,MAAM,kBAAkB;AAAA,EAC3C;AACD,CAAC;",
  "names": ["import_operations"]
}
